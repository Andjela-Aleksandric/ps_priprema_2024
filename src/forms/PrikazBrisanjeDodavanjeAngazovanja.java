/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package forms;

import controller.Controller;
import domain.Angazovanje;
import domain.Predmet;
import domain.Profesor;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import tableModel.TableModelAngazovanja;

/**
 *
 * @author AnÄ‘ela
 */
public class PrikazBrisanjeDodavanjeAngazovanja extends javax.swing.JDialog {
    private Profesor profesor;
    private controller.Controller controller = Controller.getController();
    private List<Angazovanje> listaAngazovanja = new ArrayList<>();
    private List<Predmet> listaPredmeta = new ArrayList<>();
    /**
     * Creates new form PrikazAngazovanja
     */
    public PrikazBrisanjeDodavanjeAngazovanja(java.awt.Frame parent, boolean modal, Profesor p, int mod) {
        super(parent, modal);
        initComponents();
        
        pripremaForme(mod);
        this.profesor = p;
        try {
            listaAngazovanja = controller.vratiListuAngazovanja(profesor);
            listaPredmeta = controller.getListaPredmeta();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,"Neuspesno ucitavanje angazovanja iz baze " + ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
        }
        jTableAngazovanja.setModel(new TableModelAngazovanja(listaAngazovanja));
        popuniCmb();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAngazovanja = new javax.swing.JTable();
        jComboBoxAngazovanje = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jButtonDodajAngazovanje = new javax.swing.JButton();
        jButtonObrisiAngazovanje = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldNaziv = new javax.swing.JTextField();
        jTextFieldEspb = new javax.swing.JTextField();
        jTextFieldKod1 = new javax.swing.JTextField();
        jButtonDodajAngazovanje1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTableAngazovanja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableAngazovanja);

        jLabel1.setText("Postojeci predmeti");

        jButtonDodajAngazovanje.setText("Dodaj postojeci predmet");
        jButtonDodajAngazovanje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDodajAngazovanjeActionPerformed(evt);
            }
        });

        jButtonObrisiAngazovanje.setText("Obrisi angazovanje");
        jButtonObrisiAngazovanje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObrisiAngazovanjeActionPerformed(evt);
            }
        });

        jLabel2.setText("Naziv");

        jLabel3.setText("Kod");

        jLabel4.setText("Espb");

        jButtonDodajAngazovanje1.setText("Dodaj novi predmet");
        jButtonDodajAngazovanje1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDodajAngazovanje1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonObrisiAngazovanje, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldNaziv)
                                    .addComponent(jComboBoxAngazovanje, 0, 222, Short.MAX_VALUE)
                                    .addComponent(jTextFieldEspb)
                                    .addComponent(jTextFieldKod1)))
                            .addComponent(jLabel3))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonDodajAngazovanje, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                            .addComponent(jButtonDodajAngazovanje1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(jButtonObrisiAngazovanje)))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxAngazovanje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButtonDodajAngazovanje))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldKod1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonDodajAngazovanje1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldEspb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonObrisiAngazovanjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObrisiAngazovanjeActionPerformed
        // TODO add your handling code here:
        int selektovaniRed = jTableAngazovanja.getSelectedRow();
        if(selektovaniRed == -1){
            JOptionPane.showMessageDialog(this,"Niste izabrali red u tabeli", "Greska", JOptionPane.ERROR_MESSAGE);
            return;
        }
        TableModelAngazovanja tma = (TableModelAngazovanja)jTableAngazovanja.getModel();
        Angazovanje a = tma.getListaAngazovanja().get(selektovaniRed);
        try {
            if(controller.obrisiAngazovanjeIzBaze(a)){
                 osveziPodatke();
                 JOptionPane.showMessageDialog(this,"Uspesno obrisano angazovanje iz baze", "Uspesno", JOptionPane.INFORMATION_MESSAGE);    
            }else{
                JOptionPane.showMessageDialog(this,"Neuspesno brisanje angazovanja iz baze ", "Greska", JOptionPane.ERROR_MESSAGE); 
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,"Neuspesno brisanje angazovanja iz baze " + ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE); 
            return;
        }
      
    }//GEN-LAST:event_jButtonObrisiAngazovanjeActionPerformed

    private void jButtonDodajAngazovanjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDodajAngazovanjeActionPerformed
        // TODO add your handling code here:
        Predmet predmet = (Predmet) jComboBoxAngazovanje.getSelectedItem();
        Angazovanje novoAng = new Angazovanje(profesor, predmet, null);
        if(listaAngazovanja.contains(novoAng)){
            JOptionPane.showMessageDialog(this,"Angazovanje vec postoji u bazi", "Greska", JOptionPane.ERROR_MESSAGE); 
            return;
        }
        try {
           controller.dodajAngazovanje(novoAng);
           osveziPodatke();
           JOptionPane.showMessageDialog(this,"Uspesno dodato angazovanje u bazu", "Uspesno", JOptionPane.INFORMATION_MESSAGE);    
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,"Neuspesno dodavanje angazovanja u bazu: " + ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE); 
            return;
        }
    }//GEN-LAST:event_jButtonDodajAngazovanjeActionPerformed

    private void jButtonDodajAngazovanje1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDodajAngazovanje1ActionPerformed
        // TODO add your handling code here:
        String errorMessage = "";
        
        if(jTextFieldEspb.getText() == null || jTextFieldEspb.getText().isEmpty()){
            errorMessage += "Niste uneli espb \n";
            if(jTextFieldEspb.getText().matches("\\d+")){
                errorMessage += "Niste uneli espb u dobrom formatu (ceo broj) \n";
            }
        }
        if(jTextFieldKod1.getText() == null || jTextFieldKod1.getText().isEmpty()){
            errorMessage += "Niste uneli kod predmeta \n";
        }
        if(jTextFieldNaziv.getText() == null || jTextFieldNaziv.getText().isEmpty()){
            errorMessage += "Niste uneli naziv predmeta \n";
        }
        if(!errorMessage.isEmpty()){
            JOptionPane.showMessageDialog(this, errorMessage, "Greska", JOptionPane.ERROR_MESSAGE);
        }else{
            
            try {
                    if(controller.proveriAngazovanjaProfesora(profesor.getId())){
                    Predmet p = new Predmet(null, jTextFieldNaziv.getText(), jTextFieldKod1.getText(), Integer.parseInt(jTextFieldEspb.getText()));
                    Long id = controller.dodajNoviPredmet(p);
                    p.setId(id);
                    Angazovanje a = new Angazovanje(profesor, p, null);
                    controller.dodajAngazovanje(a);
                    osveziPodatke();
                    JOptionPane.showMessageDialog(this,"Uspesno dodato angazovanje u bazu", "Uspesno", JOptionPane.INFORMATION_MESSAGE);  
                    }  
                    else{
                        JOptionPane.showMessageDialog(this,"Profesor ima maskimalan broj angazovanja (3)", "Greska", JOptionPane.ERROR_MESSAGE); 
                    }
            } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this,"Neuspesno dodavanje angazovanja u bazu: " + ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE); 
                    return;
        }
        }
    }//GEN-LAST:event_jButtonDodajAngazovanje1ActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDodajAngazovanje;
    private javax.swing.JButton jButtonDodajAngazovanje1;
    private javax.swing.JButton jButtonObrisiAngazovanje;
    private javax.swing.JComboBox jComboBoxAngazovanje;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAngazovanja;
    private javax.swing.JTextField jTextFieldEspb;
    private javax.swing.JTextField jTextFieldKod1;
    private javax.swing.JTextField jTextFieldNaziv;
    // End of variables declaration//GEN-END:variables

    private void pripremaForme(int mod) {
        if(mod == 0){
            jComboBoxAngazovanje.setVisible(false);
            jLabel1.setVisible(false);
            jButtonDodajAngazovanje.setVisible(false);
            jTextFieldEspb.setVisible(false);
            jTextFieldKod1.setVisible(false);
            jTextFieldNaziv.setVisible(false);
            jLabel1.setVisible(false);
            jLabel2.setVisible(false);
            jLabel3.setVisible(false);
            jLabel4.setVisible(false);
            jButtonDodajAngazovanje1.setVisible(false);
        }
    }

    private void popuniCmb() {
        for(Predmet p : listaPredmeta){
            jComboBoxAngazovanje.addItem(p);
        }
    }

    private void osveziPodatke() {
        try {
            List<Angazovanje> lista = controller.vratiListuAngazovanja(profesor);
            jTableAngazovanja.setModel(new TableModelAngazovanja(lista));
        } catch (Exception ex) {
            Logger.getLogger(PrikazBrisanjeDodavanjeAngazovanja.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
